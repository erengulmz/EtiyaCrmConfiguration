# server:
#   port: 8081
# spring:
#   application:
#     name: customerservice
#   datasource:
#     url: jdbc:h2:file:/data/crmcustomers;DB_CLOSE_ON_EXIT=FALSE;AUTO_RECONNECT=TRUE
#     username: sa
#     password:
#     driver-class-name: org.h2.Driver
#   jpa:
#     hibernate:
#       ddl-auto: update
#     show-sql: true
#   h2:
#     console:
#       enabled: true
#       path: /h2-console
# eureka:
#   client:
#     fetchRegistry: true
#     registerWithEureka: true
#     serviceUrl:
#       defaultZone: http://localhost:8888/eureka
#   instance:
#     instance-id: ${spring.application.name}:${instanceId:${random.value}}
#     preferIpAddress: true


eureka:
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8888/eureka
  instance:
    instance-id: ${spring.application.name}:${instanceId:${random.value}}
    preferIpAddress: true
server:
  port: 8081
spring:
  application:
    name: customerservice
  datasource:
    url: jdbc:postgresql://localhost:5432/crmcustomer
    username: postgres
    password: 12345
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true
  kafka:
    producer:
      bootstrap-servers: 127.0.0.1:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    
